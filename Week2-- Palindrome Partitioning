class Solution {
    public void solve(int idx, String s,List<String> ds, List<List<String>> al)
    {
        if(idx==s.length())
        {
            al.add(new ArrayList<>(ds));
            return;
        }
        
        for(int i=idx;i<s.length();++i)
        {
            if(isPal(s,idx,i)){
                ds.add(s.substring(idx,i+1));
                solve(i+1,s,ds,al);
                ds.remove(ds.size()-1);
            }
        }
    }
    
    boolean isPal(String s, int l, int h)
    {
        while(l<=h)
        {
            if(s.charAt(l)!=s.charAt(h))
                return false;
            l++;
            h--;
        }
        return true;
    }
    
    public List<List<String>> partition(String s) {
        List<List<String>> al=new ArrayList<>();
        List<String> ds=new ArrayList<>();
        solve(0,s,ds,al);
        return al;
    }
}
