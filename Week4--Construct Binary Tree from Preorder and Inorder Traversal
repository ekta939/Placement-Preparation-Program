/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int preindex=0;
    public TreeNode tree(int[] preorder, int[] inorder, int is, int ie)
    {
        if(is>ie)
            return null;
        
        TreeNode root=new TreeNode(preorder[preindex++]);
        int inIndex=is;
        for(int i=is;i<=ie;i++){
            if(inorder[i]==root.val){
                inIndex=i;
                break;
            }
        }
        root.left=tree(preorder, inorder, is, inIndex-1);
        root.right=tree(preorder, inorder, inIndex+1, ie);
        return root;
    }
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        return tree(preorder, inorder, 0, preorder.length-1);
    }
}
